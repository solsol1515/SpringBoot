"""
        숫자형 종류
            - 정수형
            - 실수형
            - 복소수형 1 + 2j, 3i  ( 많이 사용안함 )
            - 8진수   0o25 (영오이십오)
            - 16진수  0x25

            [ 10진수 ]
            345 = 3 * 10(2) + 4 * 10(1) + 5 * 10(0)
                = 3 * 100 + 4 * 10 + 5 * 1
            [ 8진수 ]
            25 = 2 * 8(1) + 5 * 8(0)
               = 2 * 8 + 5 * 1
               = 21
            [ 16진수 ]
            25 = 2 * 16(1) + 5 * 16(0)
               = 2* 16 + 5 * 1
               = 37
"""

# 파이션의 모든 자료형은 객체로 취급한다
# 실행 : alt + shift + F10

# 3i + 7 + 2i => 5i + 7

""" [ 기초 연산자 ]
        +  : 더하기
        -  : 빼기
        *  : 곱하기
        /  : 나누기(실수값 결과)
        // : 나누기(정수값 결과)
        %  : 나머지
        ** : 자승 (n제곱)
    
    2. 관계연산자
        <   >   <=  >=  ==  !=
    
    3. 논리연산자 (기호 X)
        not     or      and
        
    4. 이진(비트) 연산자
        ~   :  이진 not   
        |   :  이진 or
        &   :  이진 and
        ^   :  이진 xor
        <<  :  shift
        >>  :  shift
        
    5. 대입연산자
        =
        +=  -=  *=  /=  //= %=
        &=  |=  ^=
        >>= <<=
    
    6. 기타연산자 : 딕셔너리, 문자열, 리스트, 튜플 등의 자료형에서 사용
        in      : 요소에 포함되면 true, 없으면 false
        not in  : 요소에 포함되지 않으면 false, 없으면 true
      

    [참고] 증가(++), 감소(--) 연산자 없음
    [참고] is / not is 사용하지 못하게 에러 발생함
"""

a = 5
b = 2
print('a + b =', a+b)
print('a - b =', a-b)
print('a * b =', a*b)
print('a / b =', a/b)
print('a // b =', a//b)
print('a % b =', a%b)
print('a ** b =', a**b)

"""
[ 출력결과 ]
a + b = 7
a - b = 3
a * b = 10
a / b = 2.5
a // b = 2
a % b = 1
a ** b = 25
"""

print('H' in 'Hello')           # True (있니? 있으니까 트루)
print('H' not in 'Hello')       # False (없니? 있으니까 폴스)

# 출력 포맷
y = 8.3 / 2.7
z = 8.3 // 2.7
print(y, '/', z)
print('실수 1 : {},  정수 1 : {}'.format(y,z))
print('실수 1 : {0}, 정수 1 : {1}'.format(y,z))
print('실수 1 : {1}, 정수 1 : {0}'.format(y,z))

# (인덱스:포맷) 소수점 첫 번째자리까지만 출력(0.1f)
print('실수 1 : {0:0.1f}, 정수 1 : {1}'.format(y,z))

# ---------- 카페 문제 (기초 연습) ----------
'''
1. 다음 코드의 실행 결과를 쓰시오. 
>>> a = 777
>>> b = 777
>>> print(a == b, a is b)
'''
# 답 : True True

'''
2. 다음 중 변수를 메모리에서 삭제하기 위해 사용하는 명령어는?
➀ del ➁ delete ➂ remove ➃ pop ➄ clear
'''
# 답 : ➀

'''
3. 빈칸에 들어갈 각각의 코드 실행 결과를 쓰시오.
>>> a = 3.5
>>> b = int(3.5) = 3
>>> print(a**((a // b) * 2))
(가) 3.5의 제곱 12.25
>>> print(((a - b) * a) // b)
(나) 0.0
>>> b = (((a - b) * a) % b)
>>> print(b)
(다) 0.0 
>>> print((a * 4) % (b * 4))
(라) 0.0
'''
# 답 : (가) 12.25 (나) 0.0 (다) 1.75 (라) 0.0

'''
4. 입력받은 섭씨온도를 화씨온도로 변환하는 프로그램을 코딩하려고 한다. 코드 순서를 바르게 나열한 것은?
(1) fahrenheit = (( 9 / 5 ) * celsius) + 32
(2) celsius = input("섭씨온도를 입력하세요:")        // 문자형
(3) print("섭씨온도:",celsius, "화씨온도:", fahrenheit)
(4) celsius = float(input("섭씨온도를 입력하세요:")) // 형변환
➀ (2) - (1) - (3) ➁ (4) - (3) - (1) ➂ (1) - (2) - (3)
➃ (4) - (1) - (3) ➄ (4) - (2) - (3)
'''
# 답 : ➃

'''
5. 다음 변수 a의 자료형은?
a = "True"
➀ 소수형 ➁ 문자형 ➂실수형 ➃불린형 ➄ 정수형
'''
# 답 : ➁

'''
6. 다음과 같은 코드 작성 시, 실행 결과로 알맞게 짝지어진 것은?
>>> a = 10.6
>>> b = 10.5
>>> print(a * b)
>>> type(a + b)

➀ 111.3, <class ‘int’> ➁ 111.3, <class ‘str'> ➂ 111.3, <class ‘float’>
➃ 105.0, <class ‘int'> ➄ 105.0, <class ‘float’>
'''
# 답 : ➂

'''
7. 다음과 같이 코드를 작성했을 때, 실행 결과로 알맞은 것은? 
>>> a = "3.5"
>>> b = 4
>>> print(a * b)
➀ error ➁ 3.53.53.53.5 ➂ 14.0 ➃ 14 ➄ "14"
'''
# 답 : ➁

'''
8. a = "3.5", b = "1.5"일 때, print(a + b)의 실행 결과는?
① 5 ② 3.51.5 ③ a + b ④ ab ➄ 2
'''
# 답 : ②

'''
9. 다음과 같이 코드를 작성했을 때, 실행 결과로 알맞은 것은?
>>> a = '3'
>>> b = float(a)
>>> print(b ** int(a))
① TypeError ② '27.0' ③ 27.0 ④ 27 ⑤ '27
>>> 3.0 ** 3
'''
# 답 : ③

'''
10. 변수(variable)에 대한 설명으로 틀린 것은?
① 프로그램에서 사용하기 위한 특정한 값을 저장하는 공간이다.
② 선언되는 순간 메모리의 특정 영역에 공간이 할당된다.
③ 변수에 할당된 값은 하드디스크에 저장된다. (하드디스크 X 메모리 O)
④ A = 8은 "A는 8이다"라는 뜻이 아니다.
⑤ ‘2x + 7y’는 14라고 하면, 이 식에서 x와 y가 변수이다.
'''
# 답 : ③

'''
11. 다음과 같이 코드를 작성 했을 때, 실행 결과로 알맞은 것은?
>>> a = '20'
>>> b = '4'
>>> print(type(float(a / b)))
➀<class 'int'>  ➁<class 'str'> ➂<class 'float'>
➃4. 3.333333333 ➄TypeError
'''
# 답 : ➄

'''
12. 변수명을 지을 때 권장 하는 규칙 중 틀린 것은?
① 변수명은 알파벳, 숫자, 언더 스코어(_) 등을 사용하여 표현할 수 있다.
② 변수명은 의미 있는 단어로 쓰는 것을 권장하며, 한글도 사용할 수 있다.
③ 변수명은 대소문자가 구분된다.
④ 문법으로 사용되는 특별한 예약어는 변수명으로 쓰지 않는다.
⑤ 변수명은 _(언더 스코어) 대신 낙타표시법으로 작성한다.
'''
# 답 : ⑤